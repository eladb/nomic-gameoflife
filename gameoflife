#!/usr/bin/env node
var readline = require('readline');
var simulation = require('./lib/simulation');
var input = require('./lib/input');
var async = require('async');

var rl = readline.createInterface({
  input: process.stdin, 
  output: process.stdout,
  terminal: false, // no echo
});

input(rl, function(err, config) {
  if (err) {
    console.error(err);
    process.exit(1);
  }

  // create simulation object
  var sim = simulation(config);

  var interactive = process.argv[2] === '-i';;
  if (interactive) {
    return run_interactive(sim, config.iterations);
  }

  // non interactive (default) mode
  for (var i = 0; i < config.iterations; ++i) {
    sim.iterate();
  }

  sim.write_matrix(process.stdout);
});

// --

function run_interactive(sim, iterations) {
  return async.timesSeries(iterations, function(i, cb) {
    sim.iterate(); // one iteration

    console.log();
    console.log('after iteration #' + (i+1) + ':');
    sim.write_matrix(process.stdout);

    if ((i+1) >= iterations) {
      return cb(); // done
    }

    // interactive mode: wait for user
    return rl.question('enter for next iteration', function() {
      return cb();
    });

    return cb(); // just continue
  }, function() {
    process.exit(0);
  });
}